import{j as c,a as i,t as g,q as d,u,o as n,c as p,z as f,v as y,e as h,H as F,G as v,F as m}from"./chunk-e1bd6396.js";const r={},x={},w={},C={},b=[],R={},E=!0,H=Object.assign({}),P={...H};r[".page"]=P;const z=Object.assign({}),L={...z};r[".page.client"]=L;const _=Object.freeze(Object.defineProperty({__proto__:null,pageFilesLazy:r,pageFilesEager:x,pageFilesExportNamesLazy:w,pageFilesExportNamesEager:C,pageFilesList:b,neverLoaded:R,isGeneratedFile:E},Symbol.toStringTag,{value:"Module"}));c(_);function S(e){return i(e.isHydration===!0),i(e.isBackwardNavigation===null),g(e)}const l=d({withoutHash:!0});async function j(){const e=u();return n(e,{isHydration:!0,isBackwardNavigation:null}),n(e,await I(e._pageId)),B(),S(e)}function B(){const e=d({withoutHash:!0});p(l===e,`URL manipulated before hydration finished (\`${l}\` to \`${e}\`). Ensure the hydration finishes with \`onHydrationEnd()\` before manipulating the URL.`)}async function I(e){const a={},{pageFilesAll:t}=await f(!0);return n(a,{_pageFilesAll:t}),n(a,await y(t,e)),t.filter(s=>s.fileType!==".page.server").forEach(s=>{var o;h(!(!((o=s.fileExports)===null||o===void 0)&&o.onBeforeRender),`\`export { onBeforeRender }\` of ${s.filePath} is loaded in the browser but never executed (because you are using Server-side Routing). In order to reduce the size of you browser-side JavaScript, define \`onBeforeRender()\` in \`.page.server.js\` instead. See https://vite-plugin-ssr.com/onBeforeRender-isomorphic#server-routing`,{showStackTrace:!1,onlyOnce:!0})}),a}F();O();async function O(){var e,a;const t=await j();v(t),await t.exports.render(t),m(t,"onHydrationEnd"),await((a=(e=t.exports).onHydrationEnd)===null||a===void 0?void 0:a.call(e,t))}
